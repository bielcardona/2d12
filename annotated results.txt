--------------------
1 Group( <identity> of ... )
--
phi		Pcgs([  ]) -> [  ]
K1,K2,K3	[  ]	[  ]	[  ]
--------------------
--------------------
C2 Group( [ f1 ] )
>> C2A(K)
>> 1 action for each K.
--
phi		Pcgs([ f1 ]) -> [ f1 ]
K1,K2,K3	[ f1 ]	[ f1 ]	[  ]
--------------------
--------------------
C2 Group( [ f2 ] )
>> C2B(K)
>> 1 action for each K.
--
phi		Pcgs([ f2 ]) -> [ f2 ]
K1,K2,K3	[  ]	[ f2 ]	[ f2 ]
--------------------
--------------------
C2 Group( [ f1*f2 ] )
>> C2C(K)
>> 1 action for each K.
--
phi		Pcgs([ f1*f2 ]) -> [ f1*f2 ]
K1,K2,K3	[  ]	[ f1*f2 ]	[  ]
--------------------
--------------------
C2 Group( [ f3 ] )
>> C2D(K)
>> 1 action for each K.
--
phi		Pcgs([ f3 ]) -> [ f3 ]
K1,K2,K3	[ f3 ]	[  ]	[ f3 ]
--------------------
--------------------
C2 Group( [ f1*f3 ] )
>> C2E(K)
>> 1 action for each K.
--
phi		Pcgs([ f1*f3 ]) -> [ f1*f3 ]
K1,K2,K3	[ f1*f3 ]	[  ]	[  ]
--------------------
--------------------
C2 Group( [ f2*f3 ] )
>> C2F(K)
>> 1 action for each K.
--
phi		Pcgs([ f2*f3 ]) -> [ f2*f3 ]
K1,K2,K3	[  ]	[  ]	[ f2*f3 ]
--------------------
--------------------
C2 Group( [ f1*f2*f3 ] )
>> C2G(K)
>> 1 action for each K.
--
phi		Pcgs([ f1*f2*f3 ]) -> [ f1*f2*f3 ]
K1,K2,K3	[  ]	[  ]	[  ]
--------------------
--------------------
C3 Group( [ f4 ] )
>> C3(K)
>> 1 action for each K.
--
phi		Pcgs([ f4 ]) -> [ f4 ]
K1,K2,K3	[ f4 ]	[ f4 ]	[ f4 ]
--------------------
--------------------
C2 x C2 Group( [ f1, f2 ] )
>> V4A(K,K',K'')
>> 6 actions for each K.
>> 1 action for each pair of different quadratic extensions in K.
--
phi		Pcgs([ f1, f2 ]) -> [ f2, f1*f2 ]
K1,K2,K3	[ f2 ]	[ f1*f2, f2 ]	[ f1*f2 ]
phi		Pcgs([ f1, f2 ]) -> [ f1*f2, f2 ]
K1,K2,K3	[ f1*f2 ]	[ f1*f2, f2 ]	[ f2 ]
phi		Pcgs([ f1, f2 ]) -> [ f1, f1*f2 ]
K1,K2,K3	[ f1 ]	[ f1, f2 ]	[ f1*f2 ]
phi		Pcgs([ f1, f2 ]) -> [ f1*f2, f1 ]
K1,K2,K3	[ f1*f2 ]	[ f1, f2 ]	[ f1 ]
phi		Pcgs([ f1, f2 ]) -> [ f1, f2 ]
K1,K2,K3	[ f1 ]	[ f1, f2 ]	[ f2 ]
phi		Pcgs([ f1, f2 ]) -> [ f2, f1 ]
K1,K2,K3	[ f2 ]	[ f1, f2 ]	[ f1 ]
--------------------
--------------------
C2 x C2 Group( [ f1, f3 ] )
>> V4B(K,K',K'')
>> 6 actions for each K.
>> 1 action for each pair of different quadratic extensions in K.
--
phi		Pcgs([ f1, f3 ]) -> [ f3, f1*f3 ]
K1,K2,K3	[ f1*f3, f3 ]	[ f3 ]	[ f1*f3 ]
phi		Pcgs([ f1, f3 ]) -> [ f1*f3, f3 ]
K1,K2,K3	[ f1*f3, f3 ]	[ f1*f3 ]	[ f3 ]
phi		Pcgs([ f1, f3 ]) -> [ f1, f1*f3 ]
K1,K2,K3	[ f1, f3 ]	[ f1 ]	[ f1*f3 ]
phi		Pcgs([ f1, f3 ]) -> [ f1*f3, f1 ]
K1,K2,K3	[ f1, f3 ]	[ f1*f3 ]	[ f1 ]
phi		Pcgs([ f1, f3 ]) -> [ f1, f3 ]
K1,K2,K3	[ f1, f3 ]	[ f1 ]	[ f3 ]
phi		Pcgs([ f1, f3 ]) -> [ f3, f1 ]
K1,K2,K3	[ f1, f3 ]	[ f3 ]	[ f1 ]
--------------------
--------------------
C2 x C2 Group( [ f2, f3 ] )
>> V4C(K,K',K'')
>> 6 actions for each K.
>> 1 action for each pair of different quadratic extensions in K.
--
phi		Pcgs([ f2, f3 ]) -> [ f3, f2*f3 ]
K1,K2,K3	[ f2*f3 ]	[ f3 ]	[ f2*f3, f3 ]
phi		Pcgs([ f2, f3 ]) -> [ f2*f3, f3 ]
K1,K2,K3	[ f3 ]	[ f2*f3 ]	[ f2*f3, f3 ]
phi		Pcgs([ f2, f3 ]) -> [ f2, f2*f3 ]
K1,K2,K3	[ f2*f3 ]	[ f2 ]	[ f2, f3 ]
phi		Pcgs([ f2, f3 ]) -> [ f2*f3, f2 ]
K1,K2,K3	[ f2 ]	[ f2*f3 ]	[ f2, f3 ]
phi		Pcgs([ f2, f3 ]) -> [ f2, f3 ]
K1,K2,K3	[ f3 ]	[ f2 ]	[ f2, f3 ]
phi		Pcgs([ f2, f3 ]) -> [ f3, f2 ]
K1,K2,K3	[ f2 ]	[ f3 ]	[ f2, f3 ]
--------------------
--------------------
C2 x C2 Group( [ f1*f2, f3 ] )
>> V4D(K,K',K'')
>> 6 actions for each K.
>> 1 action for each pair of different quadratic extensions in K.
--
phi		Pcgs([ f1*f2, f3 ]) -> [ f1*f2, f1*f2*f3 ]
K1,K2,K3	[ f1*f2*f3 ]	[ f1*f2 ]	[ f1*f2*f3 ]
phi		Pcgs([ f1*f2, f3 ]) -> [ f1*f2*f3, f1*f2 ]
K1,K2,K3	[ f1*f2 ]	[ f1*f2*f3 ]	[ f1*f2 ]
phi		Pcgs([ f1*f2, f3 ]) -> [ f3, f1*f2*f3 ]
K1,K2,K3	[ f1*f2*f3 ]	[ f3 ]	[ f1*f2*f3 ]
phi		Pcgs([ f1*f2, f3 ]) -> [ f1*f2*f3, f3 ]
K1,K2,K3	[ f3 ]	[ f1*f2*f3 ]	[ f3 ]
phi		Pcgs([ f1*f2, f3 ]) -> [ f3, f1*f2 ]
K1,K2,K3	[ f1*f2 ]	[ f3 ]	[ f1*f2 ]
phi		Pcgs([ f1*f2, f3 ]) -> [ f1*f2, f3 ]
K1,K2,K3	[ f3 ]	[ f1*f2 ]	[ f3 ]
--------------------
--------------------
C2 x C2 Group( [ f1, f2*f3 ] )
>> V4E(K,K',K'')
>> 6 actions for each K.
>> 1 action for each pair of different quadratic extensions in K.
--
phi		Pcgs([ f1, f2*f3 ]) -> [ f2*f3, f1*f2*f3 ]
K1,K2,K3	[ f2*f3 ]	[ f2*f3 ]	[ f1*f2*f3 ]
phi		Pcgs([ f1, f2*f3 ]) -> [ f1*f2*f3, f2*f3 ]
K1,K2,K3	[ f1*f2*f3 ]	[ f1*f2*f3 ]	[ f2*f3 ]
phi		Pcgs([ f1, f2*f3 ]) -> [ f1, f1*f2*f3 ]
K1,K2,K3	[ f1 ]	[ f1 ]	[ f1*f2*f3 ]
phi		Pcgs([ f1, f2*f3 ]) -> [ f1*f2*f3, f1 ]
K1,K2,K3	[ f1*f2*f3 ]	[ f1*f2*f3 ]	[ f1 ]
phi		Pcgs([ f1, f2*f3 ]) -> [ f1, f2*f3 ]
K1,K2,K3	[ f1 ]	[ f1 ]	[ f2*f3 ]
phi		Pcgs([ f1, f2*f3 ]) -> [ f2*f3, f1 ]
K1,K2,K3	[ f2*f3 ]	[ f2*f3 ]	[ f1 ]
--------------------
--------------------
C2 x C2 Group( [ f2, f1*f3 ] )
>> V4F(K,K',K'')
>> 6 actions for each K.
>> 1 action for each pair of different quadratic extensions in K.
--
phi		Pcgs([ f1*f3, f2 ]) -> [ f1*f3, f1*f2*f3 ]
K1,K2,K3	[ f1*f3 ]	[ f1*f2*f3 ]	[ f1*f2*f3 ]
phi		Pcgs([ f1*f3, f2 ]) -> [ f1*f2*f3, f1*f3 ]
K1,K2,K3	[ f1*f2*f3 ]	[ f1*f3 ]	[ f1*f3 ]
phi		Pcgs([ f1*f3, f2 ]) -> [ f2, f1*f2*f3 ]
K1,K2,K3	[ f2 ]	[ f1*f2*f3 ]	[ f1*f2*f3 ]
phi		Pcgs([ f1*f3, f2 ]) -> [ f1*f2*f3, f2 ]
K1,K2,K3	[ f1*f2*f3 ]	[ f2 ]	[ f2 ]
phi		Pcgs([ f1*f3, f2 ]) -> [ f2, f1*f3 ]
K1,K2,K3	[ f2 ]	[ f1*f3 ]	[ f1*f3 ]
phi		Pcgs([ f1*f3, f2 ]) -> [ f1*f3, f2 ]
K1,K2,K3	[ f1*f3 ]	[ f2 ]	[ f2 ]
--------------------
--------------------
C2 x C2 Group( [ f1*f3, f2*f3 ] )
>> V4G(K,K',K'')
>> 6 actions for each K.
>> 1 action for each pair of different quadratic extensions in K.
--
phi		Pcgs([ f1*f3, f2*f3 ]) -> [ f1*f3, f2*f3 ]
K1,K2,K3	[ f1*f3 ]	[ f1*f2 ]	[ f2*f3 ]
phi		Pcgs([ f1*f3, f2*f3 ]) -> [ f2*f3, f1*f3 ]
K1,K2,K3	[ f2*f3 ]	[ f1*f2 ]	[ f1*f3 ]
phi		Pcgs([ f1*f3, f2*f3 ]) -> [ f1*f2, f2*f3 ]
K1,K2,K3	[ f1*f2 ]	[ f1*f3 ]	[ f2*f3 ]
phi		Pcgs([ f1*f3, f2*f3 ]) -> [ f2*f3, f1*f2 ]
K1,K2,K3	[ f2*f3 ]	[ f1*f3 ]	[ f1*f2 ]
phi		Pcgs([ f1*f3, f2*f3 ]) -> [ f1*f2, f1*f3 ]
K1,K2,K3	[ f1*f2 ]	[ f2*f3 ]	[ f1*f3 ]
phi		Pcgs([ f1*f3, f2*f3 ]) -> [ f1*f3, f1*f2 ]
K1,K2,K3	[ f1*f3 ]	[ f2*f3 ]	[ f1*f2 ]
--------------------
--------------------
C6 Group( [ f1*f4 ] )
>> C6A(K)
>> 1 action for each K.
--
phi		Pcgs([ f1*f4, f4 ]) -> [ f1*f4, f4 ]
K1,K2,K3	[ f1*f4^2 ]	[ f1*f4^2 ]	[ f4 ]
--------------------
--------------------
C6 Group( [ f2*f4 ] )
>> C6B(K)
>> 1 action for each K.
--
phi		Pcgs([ f2*f4, f4 ]) -> [ f2*f4, f4 ]
K1,K2,K3	[ f4 ]	[ f2*f4^2 ]	[ f2*f4^2 ]
--------------------
--------------------
C6 Group( [ f1*f2*f4 ] )
>> C6C(K)
>> 1 action for each K.
--
phi		Pcgs([ f1*f2*f4, f4 ]) -> [ f1*f2*f4, f4 ]
K1,K2,K3	[ f4 ]	[ f1*f2*f4^2 ]	[ f4 ]
--------------------
--------------------
S3 Group( [ f3, f4 ] )
>> S3A(K)
>> 1 action for each K.
--
phi		Pcgs([ f3, f4 ]) -> [ f3, f4 ]
K1,K2,K3	[ f3, f4 ]	[ f4 ]	[ f3, f4 ]
--------------------
--------------------
S3 Group( [ f1*f3, f4 ] )
>> S3B(K)
>> 1 action for each K.
--
phi		Pcgs([ f1*f3, f4 ]) -> [ f1*f3, f4 ]
K1,K2,K3	[ f4, f1*f3 ]	[ f4 ]	[ f4 ]
--------------------
--------------------
S3 Group( [ f2*f3, f4 ] )
>> S3C(K)
>> 1 action for each K.
--
phi		Pcgs([ f2*f3, f4 ]) -> [ f2*f3, f4 ]
K1,K2,K3	[ f4 ]	[ f4 ]	[ f4, f2*f3 ]
--------------------
--------------------
S3 Group( [ f1*f2*f3, f4 ] )
>> S3D(K)
>> 1 action for each K.
--
phi		Pcgs([ f1*f2*f3, f4 ]) -> [ f1*f2*f3, f4 ]
K1,K2,K3	[ f4 ]	[ f4 ]	[ f4 ]
--------------------
--------------------
C2 x C2 x C2 Group( [ f1, f2, f3 ] )
>> C2^3(K,K',K'',K''')
>> 168 actions for each K.
>> 1 action for each triple of different quadratic extensions that generate K.
--
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f1*f3, f2*f3 ]
K1,K2,K3	[ f2, f3 ]	[ f1*f3, f2 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f3, f1*f2*f3 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f2, f3 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f1*f2*f3, f3 ]
K1,K2,K3	[ f2, f3 ]	[ f1*f3, f2 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f2*f3, f1*f3 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f2, f3 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f1*f2, f2*f3 ]
K1,K2,K3	[ f2, f3 ]	[ f1*f2, f3 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f2, f1*f2*f3 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f2, f3 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f1*f2*f3, f2 ]
K1,K2,K3	[ f2, f3 ]	[ f1*f2, f3 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f2*f3, f1*f2 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f2, f3 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f1*f3, f1*f2*f3 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f1*f2, f2*f3 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f3, f2*f3 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f1*f2, f3 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f1*f2*f3, f1*f3 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f1*f2, f3 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f2*f3, f3 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f1*f2, f2*f3 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f1*f2, f1*f2*f3 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f1*f2, f2*f3 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f2, f2*f3 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f1*f3, f2 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f1*f2*f3, f1*f2 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f1*f3, f2 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f2*f3, f2 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f1*f2, f2*f3 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f1*f2, f3 ]
K1,K2,K3	[ f2, f3 ]	[ f1*f2, f2*f3 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f1*f3, f2 ]
K1,K2,K3	[ f2, f3 ]	[ f1*f2, f2*f3 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f2, f1*f3 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f2, f3 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f3, f1*f2 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f2, f3 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f1*f2, f1*f3 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f1*f2, f3 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f1*f3, f1*f2 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f1*f3, f2 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f2, f3 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f1*f3, f2 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f3, f2 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f1*f2, f3 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f2*f3, f1*f3 ]
K1,K2,K3	[ f1, f3 ]	[ f1, f2*f3 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f1*f2*f3, f3 ]
K1,K2,K3	[ f1, f3 ]	[ f1, f2*f3 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f3, f1*f2*f3 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f1, f3 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f1*f3, f2*f3 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f1, f3 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f1*f2, f1*f3 ]
K1,K2,K3	[ f1, f3 ]	[ f1*f2, f3 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f1, f1*f2*f3 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f1, f3 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f1*f2*f3, f1 ]
K1,K2,K3	[ f1, f3 ]	[ f1*f2, f3 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f1*f3, f1*f2 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f1, f3 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f2*f3, f1*f2*f3 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f1*f2, f2*f3 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f1*f2*f3, f2*f3 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f1*f2, f3 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f3, f1*f3 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f1*f2, f3 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f1*f3, f3 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f1*f2, f2*f3 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f1*f2, f3 ]
K1,K2,K3	[ f1, f3 ]	[ f1*f2, f2*f3 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f2*f3, f1 ]
K1,K2,K3	[ f1, f3 ]	[ f1*f2, f2*f3 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f1, f2*f3 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f1, f3 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f3, f1*f2 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f1, f3 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f1*f2, f1*f2*f3 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f1*f2, f2*f3 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f1, f1*f3 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f1, f2*f3 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f1*f2*f3, f1*f2 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f1, f2*f3 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f1*f3, f1 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f1*f2, f2*f3 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f1*f2, f2*f3 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f1*f2, f3 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f2*f3, f1*f2 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f1, f2*f3 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f1, f3 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f1, f2*f3 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f3, f1 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f1*f2, f3 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f2*f3, f1*f2 ]
K1,K2,K3	[ f1, f2 ]	[ f1, f2*f3 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f1*f2*f3, f2 ]
K1,K2,K3	[ f1, f2 ]	[ f1, f2*f3 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f2, f1*f2*f3 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f1, f2 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f1*f2, f2*f3 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f1, f2 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f1*f3, f1*f2 ]
K1,K2,K3	[ f1, f2 ]	[ f1*f3, f2 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f1*f2*f3, f1 ]
K1,K2,K3	[ f1, f2 ]	[ f1*f3, f2 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f1, f1*f2*f3 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f1, f2 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f1*f2, f1*f3 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f1, f2 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f1*f3, f2 ]
K1,K2,K3	[ f1, f2 ]	[ f1*f2, f2*f3 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f2*f3, f1 ]
K1,K2,K3	[ f1, f2 ]	[ f1*f2, f2*f3 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f1, f2*f3 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f1, f2 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f2, f1*f3 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f1, f2 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f2*f3, f1*f2*f3 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f1*f2, f2*f3 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f1*f2*f3, f2*f3 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f1*f3, f2 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f2, f1*f2 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f1*f3, f2 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f1*f2, f2 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f1*f2, f2*f3 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f1*f3, f1*f2*f3 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f1*f2, f2*f3 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f1*f2*f3, f1*f3 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f1, f2*f3 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f1, f1*f2 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f1, f2*f3 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f1*f2, f1 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f1*f2, f2*f3 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f1*f3, f2*f3 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f1*f3, f2 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f2*f3, f1*f3 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f1, f2*f3 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f1, f2 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f1, f2*f3 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f2, f1 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f1*f3, f2 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f1*f2*f3, f1*f3 ]
K1,K2,K3	[ f1, f3 ]	[ f1, f2*f3 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f2*f3, f3 ]
K1,K2,K3	[ f1, f3 ]	[ f1, f2*f3 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f1*f3, f1*f2*f3 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f1, f3 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f3, f2*f3 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f1, f3 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f1*f2*f3, f2*f3 ]
K1,K2,K3	[ f2, f3 ]	[ f1*f3, f2 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f2*f3, f1*f2*f3 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f2, f3 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f1*f3, f3 ]
K1,K2,K3	[ f2, f3 ]	[ f1*f3, f2 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f3, f1*f3 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f2, f3 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f2, f1*f3 ]
K1,K2,K3	[ f1, f3 ]	[ f2, f3 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f1, f2*f3 ]
K1,K2,K3	[ f2, f3 ]	[ f1, f3 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f2*f3, f1 ]
K1,K2,K3	[ f1, f3 ]	[ f2, f3 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f1*f3, f2 ]
K1,K2,K3	[ f2, f3 ]	[ f1, f3 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f2, f3 ]
K1,K2,K3	[ f1, f3 ]	[ f1*f3, f2 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f1, f1*f2*f3 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f1, f3 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f1*f2*f3, f1 ]
K1,K2,K3	[ f1, f3 ]	[ f1*f3, f2 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f3, f2 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f1, f3 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f2, f1*f2*f3 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f2, f3 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f1, f3 ]
K1,K2,K3	[ f2, f3 ]	[ f1, f2*f3 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f1*f2*f3, f2 ]
K1,K2,K3	[ f2, f3 ]	[ f1, f2*f3 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f3, f1 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f2, f3 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f2, f2*f3 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f1*f3, f2 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f1, f1*f3 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f1, f2*f3 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f2*f3, f2 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f1, f2*f3 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f1*f3, f1 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f1*f3, f2 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f1*f2*f3, f1*f2 ]
K1,K2,K3	[ f1, f2 ]	[ f1, f2*f3 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f2*f3, f2 ]
K1,K2,K3	[ f1, f2 ]	[ f1, f2*f3 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f1*f2, f1*f2*f3 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f1, f2 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f2, f2*f3 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f1, f2 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f3, f1*f2 ]
K1,K2,K3	[ f1, f2 ]	[ f2, f3 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f1, f2*f3 ]
K1,K2,K3	[ f2, f3 ]	[ f1, f2 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f2*f3, f1 ]
K1,K2,K3	[ f1, f2 ]	[ f2, f3 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f1*f2, f3 ]
K1,K2,K3	[ f2, f3 ]	[ f1, f2 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f1*f2*f3, f2*f3 ]
K1,K2,K3	[ f2, f3 ]	[ f1*f2, f3 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f2*f3, f1*f2*f3 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f2, f3 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f1*f2, f2 ]
K1,K2,K3	[ f2, f3 ]	[ f1*f2, f3 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f2, f1*f2 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f2, f3 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f3, f2 ]
K1,K2,K3	[ f1, f2 ]	[ f1*f2, f3 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f1*f2*f3, f1 ]
K1,K2,K3	[ f1, f2 ]	[ f1*f2, f3 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f1, f1*f2*f3 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f1, f2 ]	[ f1, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f2, f3 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f1, f2 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f3, f1*f2*f3 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f2, f3 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f1*f2*f3, f3 ]
K1,K2,K3	[ f2, f3 ]	[ f1, f2*f3 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f1, f2 ]
K1,K2,K3	[ f2, f3 ]	[ f1, f2*f3 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f2, f1 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f2, f3 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f3, f2*f3 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f1*f2, f3 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f1, f1*f2 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f1, f2*f3 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f2*f3, f3 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f1, f2*f3 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f1*f2, f1 ]
K1,K2,K3	[ f1, f2*f3 ]	[ f1*f2, f3 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f3, f1*f2 ]
K1,K2,K3	[ f1, f2 ]	[ f1, f3 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f2, f1*f3 ]
K1,K2,K3	[ f1, f3 ]	[ f1, f2 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f1*f3, f2 ]
K1,K2,K3	[ f1, f2 ]	[ f1, f3 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f1*f2, f3 ]
K1,K2,K3	[ f1, f3 ]	[ f1, f2 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f1*f2*f3, f1*f2 ]
K1,K2,K3	[ f1, f2 ]	[ f1*f3, f2 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f1*f3, f1 ]
K1,K2,K3	[ f1, f2 ]	[ f1*f3, f2 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f1*f2, f1*f2*f3 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f1, f2 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f1, f1*f3 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f1, f2 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f1*f2*f3, f1*f3 ]
K1,K2,K3	[ f1, f3 ]	[ f1*f2, f3 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f1*f3, f1*f2*f3 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f1, f3 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f1*f2, f1 ]
K1,K2,K3	[ f1, f3 ]	[ f1*f2, f3 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f1, f1*f2 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f1, f3 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f1*f2*f3, f2 ]
K1,K2,K3	[ f1, f2 ]	[ f1*f2, f3 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f3, f1 ]
K1,K2,K3	[ f1, f2 ]	[ f1*f2, f3 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f2, f1*f2*f3 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f1, f2 ]	[ f1*f3, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f1, f3 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f1, f2 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f1*f2*f3, f3 ]
K1,K2,K3	[ f1, f3 ]	[ f1*f3, f2 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f3, f1*f2*f3 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f1, f3 ]	[ f1*f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f2, f1 ]
K1,K2,K3	[ f1, f3 ]	[ f1*f3, f2 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f1, f2 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f1, f3 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f3, f1*f3 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f1*f2, f3 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f2, f1*f2 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f1*f3, f2 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f1*f3, f3 ]
K1,K2,K3	[ f1*f2, f3 ]	[ f1*f3, f2 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2*f3, f1*f2, f2 ]
K1,K2,K3	[ f1*f3, f2 ]	[ f1*f2, f3 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f1*f3, f1*f2 ]
K1,K2,K3	[ f1, f2 ]	[ f1, f3 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f1*f2, f1*f3 ]
K1,K2,K3	[ f1, f3 ]	[ f1, f2 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f3, f2 ]
K1,K2,K3	[ f1, f2 ]	[ f1, f3 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1, f2, f3 ]
K1,K2,K3	[ f1, f3 ]	[ f1, f2 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f2*f3, f1*f2 ]
K1,K2,K3	[ f1, f2 ]	[ f2, f3 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f1*f2, f2*f3 ]
K1,K2,K3	[ f2, f3 ]	[ f1, f2 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f3, f1 ]
K1,K2,K3	[ f1, f2 ]	[ f2, f3 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2, f1, f3 ]
K1,K2,K3	[ f2, f3 ]	[ f1, f2 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f2*f3, f1*f3 ]
K1,K2,K3	[ f1, f3 ]	[ f2, f3 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f1*f3, f2*f3 ]
K1,K2,K3	[ f2, f3 ]	[ f1, f3 ]	[ f1*f2, f2*f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f2, f1 ]
K1,K2,K3	[ f1, f3 ]	[ f2, f3 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f3, f1, f2 ]
K1,K2,K3	[ f2, f3 ]	[ f1, f3 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f2*f3, f2 ]
K1,K2,K3	[ f1, f2 ]	[ f1*f2, f2*f3 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f1*f3, f1 ]
K1,K2,K3	[ f1, f2 ]	[ f1*f2, f2*f3 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f2, f2*f3 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f1, f2 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f2, f1, f1*f3 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f1, f2 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f2*f3, f3 ]
K1,K2,K3	[ f1, f3 ]	[ f1*f2, f2*f3 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f1*f2, f1 ]
K1,K2,K3	[ f1, f3 ]	[ f1*f2, f2*f3 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f3, f2*f3 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f1, f3 ]	[ f2, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f1*f3, f1, f1*f2 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f1, f3 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f1*f3, f3 ]
K1,K2,K3	[ f2, f3 ]	[ f1*f2, f2*f3 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f1*f2, f2 ]
K1,K2,K3	[ f2, f3 ]	[ f1*f2, f2*f3 ]	[ f1, f2 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f3, f1*f3 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f2, f3 ]	[ f1, f3 ]
phi		Pcgs([ f1, f2, f3 ]) -> [ f2*f3, f2, f1*f2 ]
K1,K2,K3	[ f1*f2, f2*f3 ]	[ f2, f3 ]	[ f1, f2 ]
--------------------
--------------------
C6 x C2 Group( [ f1, f2, f4 ] )
>> V4C3(K,K',K'')
>> 6 actions for each K.
>> 1 action for each pair of different quadratic extensions in K.
--
phi		Pcgs([ f1, f2, f4 ]) -> [ f2, f1*f2, f4 ]
K1,K2,K3	[ f2*f4 ]	[ f2, f1*f2*f4 ]	[ f1*f2*f4 ]
phi		Pcgs([ f1, f2, f4 ]) -> [ f1*f2, f2, f4 ]
K1,K2,K3	[ f1*f2*f4 ]	[ f2, f1*f2*f4 ]	[ f2*f4 ]
phi		Pcgs([ f1, f2, f4 ]) -> [ f1, f1*f2, f4 ]
K1,K2,K3	[ f1*f4 ]	[ f2, f1*f4 ]	[ f1*f2*f4 ]
phi		Pcgs([ f1, f2, f4 ]) -> [ f1*f2, f1, f4 ]
K1,K2,K3	[ f1*f2*f4 ]	[ f2, f1*f4 ]	[ f1*f4 ]
phi		Pcgs([ f1, f2, f4 ]) -> [ f1, f2, f4 ]
K1,K2,K3	[ f1*f4 ]	[ f2, f1*f4 ]	[ f2*f4 ]
phi		Pcgs([ f1, f2, f4 ]) -> [ f2, f1, f4 ]
K1,K2,K3	[ f2*f4 ]	[ f2, f1*f4 ]	[ f1*f4 ]
--------------------
--------------------
D12 Group( [ f1, f3, f4 ] )
>> D12A(K,K')
>> 2 actions for each K.
>> 1 action for each quadratic extension K' in K with K/K' not cyclic.
--
phi		Pcgs([ f1, f3, f4 ]) -> [ f1, f1*f3, f4 ]
K1,K2,K3	[ f3, f1*f4 ]	[ f1*f4 ]	[ f4, f1*f3 ]
phi		Pcgs([ f1, f3, f4 ]) -> [ f1, f3, f4 ]
K1,K2,K3	[ f3, f1*f4 ]	[ f1*f4 ]	[ f3, f4 ]
--------------------
--------------------
D12 Group( [ f2, f3, f4 ] )
>> D12B(K,K')
>> 2 actions for each K.
>> 1 action for each quadratic extension K' in K with K/K' not cyclic.
--
phi		Pcgs([ f2, f3, f4 ]) -> [ f2, f2*f3, f4 ]
K1,K2,K3	[ f4, f2*f3 ]	[ f2*f4 ]	[ f3, f2*f4 ]
phi		Pcgs([ f2, f3, f4 ]) -> [ f2, f3, f4 ]
K1,K2,K3	[ f3, f4 ]	[ f2*f4 ]	[ f3, f2*f4 ]
--------------------
--------------------
D12 Group( [ f1*f2, f3, f4 ] )
>> D12C(K,K')
>> 2 actions for each K.
>> 1 action for each quadratic extension K' in K with K/K' not cyclic.
--
phi		Pcgs([ f1*f2, f3, f4 ]) -> [ f1*f2, f1*f2*f3, f4 ]
K1,K2,K3	[ f4, f1*f2*f3 ]	[ f1*f2*f4 ]	[ f4, f1*f2*f3 ]
phi		Pcgs([ f1*f2, f3, f4 ]) -> [ f1*f2, f3, f4 ]
K1,K2,K3	[ f3, f4 ]	[ f1*f2*f4 ]	[ f3, f4 ]
--------------------
--------------------
D12 Group( [ f1, f2*f3, f4 ] )
>> D12D(K,K')
>> 2 actions for each K.
>> 1 action for each quadratic extension K' in K with K/K' not cyclic.
--
phi		Pcgs([ f1, f2*f3, f4 ]) -> [ f1, f1*f2*f3, f4 ]
K1,K2,K3	[ f1*f4 ]	[ f1*f4 ]	[ f4, f1*f2*f3 ]
phi		Pcgs([ f1, f2*f3, f4 ]) -> [ f1, f2*f3, f4 ]
K1,K2,K3	[ f1*f4 ]	[ f1*f4 ]	[ f4, f2*f3 ]
--------------------
--------------------
D12 Group( [ f2, f1*f3, f4 ] )
>> D12E(K,K')
>> 2 actions for each K.
>> 1 action for each quadratic extension K' in K with K/K' not cyclic.
--
phi		Pcgs([ f1*f3, f2, f4 ]) -> [ f1*f2*f3, f2, f4 ]
K1,K2,K3	[ f4, f1*f2*f3 ]	[ f2*f4 ]	[ f2*f4 ]
phi		Pcgs([ f1*f3, f2, f4 ]) -> [ f1*f3, f2, f4 ]
K1,K2,K3	[ f4, f1*f3 ]	[ f2*f4 ]	[ f2*f4 ]
--------------------
--------------------
D12 Group( [ f1*f2, f1*f3, f4 ] )
>> D12F(K,K')
>> 2 actions for each K.
>> 1 action for each quadratic extension K' in K with K/K' not cyclic.
--
phi		Pcgs([ f1*f2, f2*f3, f4 ]) -> [ f1*f2, f2*f3, f4 ]
K1,K2,K3	[ f4, f1*f3 ]	[ f1*f2*f4 ]	[ f4, f2*f3 ]
phi		Pcgs([ f1*f2, f2*f3, f4 ]) -> [ f1*f2, f1*f3, f4 ]
K1,K2,K3	[ f4, f2*f3 ]	[ f1*f2*f4 ]	[ f4, f1*f3 ]
--------------------
--------------------
C2 x C2 x S3 Group( [ f1, f2, f3, f4 ] )
>> C2D12(K,K',K'')
>> 24 actions for each K.
>> 1 action for each pair of quadratic extensions K',K'' in K with Gal(K/K'.K'')=S3
--
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f1, f2, f1*f2*f3, f4 ]
K1,K2,K3	[ f1*f4, f2*f3 ]	[ f2, f1*f4 ]	[ f2*f4, f1*f2*f3 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f1, f1*f2, f2*f3, f4 ]
K1,K2,K3	[ f1*f4, f2*f3 ]	[ f2, f1*f4 ]	[ f2*f3, f1*f2*f4 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f2, f1, f1*f2*f3, f4 ]
K1,K2,K3	[ f2*f4, f1*f2*f3 ]	[ f2, f1*f4 ]	[ f1*f4, f2*f3 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f2, f1*f2, f1*f3, f4 ]
K1,K2,K3	[ f1*f3, f2*f4 ]	[ f2, f1*f2*f4 ]	[ f2*f3, f1*f2*f4 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f1*f2, f1, f2*f3, f4 ]
K1,K2,K3	[ f2*f3, f1*f2*f4 ]	[ f2, f1*f4 ]	[ f1*f4, f2*f3 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f1*f2, f2, f1*f3, f4 ]
K1,K2,K3	[ f2*f3, f1*f2*f4 ]	[ f2, f1*f2*f4 ]	[ f1*f3, f2*f4 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f1, f1*f2, f1*f2*f3, f4 ]
K1,K2,K3	[ f1*f4, f2*f3 ]	[ f2, f1*f4 ]	[ f3, f1*f2*f4 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f1, f2, f2*f3, f4 ]
K1,K2,K3	[ f1*f4, f2*f3 ]	[ f2, f1*f4 ]	[ f3, f2*f4 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f2, f1, f2*f3, f4 ]
K1,K2,K3	[ f3, f2*f4 ]	[ f2, f1*f4 ]	[ f1*f4, f2*f3 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f2, f1*f2, f3, f4 ]
K1,K2,K3	[ f3, f2*f4 ]	[ f2, f1*f2*f4 ]	[ f3, f1*f2*f4 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f1*f2, f1, f1*f2*f3, f4 ]
K1,K2,K3	[ f3, f1*f2*f4 ]	[ f2, f1*f4 ]	[ f1*f4, f2*f3 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f1*f2, f2, f3, f4 ]
K1,K2,K3	[ f3, f1*f2*f4 ]	[ f2, f1*f2*f4 ]	[ f3, f2*f4 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f1, f2, f1*f3, f4 ]
K1,K2,K3	[ f3, f1*f4 ]	[ f2, f1*f4 ]	[ f1*f3, f2*f4 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f1, f1*f2, f3, f4 ]
K1,K2,K3	[ f3, f1*f4 ]	[ f2, f1*f4 ]	[ f3, f1*f2*f4 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f2, f1*f2, f1*f2*f3, f4 ]
K1,K2,K3	[ f2*f4, f1*f2*f3 ]	[ f2, f1*f2*f4 ]	[ f3, f1*f2*f4 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f2, f1, f1*f3, f4 ]
K1,K2,K3	[ f1*f3, f2*f4 ]	[ f2, f1*f4 ]	[ f3, f1*f4 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f1*f2, f2, f1*f2*f3, f4 ]
K1,K2,K3	[ f3, f1*f2*f4 ]	[ f2, f1*f2*f4 ]	[ f2*f4, f1*f2*f3 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f1*f2, f1, f3, f4 ]
K1,K2,K3	[ f3, f1*f2*f4 ]	[ f2, f1*f4 ]	[ f3, f1*f4 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f1, f1*f2, f1*f3, f4 ]
K1,K2,K3	[ f3, f1*f4 ]	[ f2, f1*f4 ]	[ f2*f3, f1*f2*f4 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f1, f2, f3, f4 ]
K1,K2,K3	[ f3, f1*f4 ]	[ f2, f1*f4 ]	[ f3, f2*f4 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f2, f1*f2, f2*f3, f4 ]
K1,K2,K3	[ f3, f2*f4 ]	[ f2, f1*f2*f4 ]	[ f2*f3, f1*f2*f4 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f2, f1, f3, f4 ]
K1,K2,K3	[ f3, f2*f4 ]	[ f2, f1*f4 ]	[ f3, f1*f4 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f1*f2, f2, f2*f3, f4 ]
K1,K2,K3	[ f2*f3, f1*f2*f4 ]	[ f2, f1*f2*f4 ]	[ f3, f2*f4 ]
phi		Pcgs([ f1, f2, f3, f4 ]) -> [ f1*f2, f1, f1*f3, f4 ]
K1,K2,K3	[ f2*f3, f1*f2*f4 ]	[ f2, f1*f4 ]	[ f3, f1*f4 ]
--------------------
